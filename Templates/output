
hello:     file format elf32-i386


Disassembly of section .init:

08048294 <_init>:
 8048294:	53                   	push   %ebx
 8048295:	83 ec 08             	sub    $0x8,%esp
 8048298:	e8 93 00 00 00       	call   8048330 <__x86.get_pc_thunk.bx>
 804829d:	81 c3 17 14 00 00    	add    $0x1417,%ebx
 80482a3:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482a9:	85 c0                	test   %eax,%eax
 80482ab:	74 05                	je     80482b2 <_init+0x1e>
 80482ad:	e8 2e 00 00 00       	call   80482e0 <__gmon_start__@plt>
 80482b2:	83 c4 08             	add    $0x8,%esp
 80482b5:	5b                   	pop    %ebx
 80482b6:	c3                   	ret    

Disassembly of section .plt:

080482c0 <printf@plt-0x10>:
 80482c0:	ff 35 b8 96 04 08    	pushl  0x80496b8
 80482c6:	ff 25 bc 96 04 08    	jmp    *0x80496bc
 80482cc:	00 00                	add    %al,(%eax)
	...

080482d0 <printf@plt>:
 80482d0:	ff 25 c0 96 04 08    	jmp    *0x80496c0
 80482d6:	68 00 00 00 00       	push   $0x0
 80482db:	e9 e0 ff ff ff       	jmp    80482c0 <_init+0x2c>

080482e0 <__gmon_start__@plt>:
 80482e0:	ff 25 c4 96 04 08    	jmp    *0x80496c4
 80482e6:	68 08 00 00 00       	push   $0x8
 80482eb:	e9 d0 ff ff ff       	jmp    80482c0 <_init+0x2c>

080482f0 <__libc_start_main@plt>:
 80482f0:	ff 25 c8 96 04 08    	jmp    *0x80496c8
 80482f6:	68 10 00 00 00       	push   $0x10
 80482fb:	e9 c0 ff ff ff       	jmp    80482c0 <_init+0x2c>

Disassembly of section .text:

08048300 <_start>:
 8048300:	31 ed                	xor    %ebp,%ebp
 8048302:	5e                   	pop    %esi
 8048303:	89 e1                	mov    %esp,%ecx
 8048305:	83 e4 f0             	and    $0xfffffff0,%esp
 8048308:	50                   	push   %eax
 8048309:	54                   	push   %esp
 804830a:	52                   	push   %edx
 804830b:	68 a0 84 04 08       	push   $0x80484a0
 8048310:	68 30 84 04 08       	push   $0x8048430
 8048315:	51                   	push   %ecx
 8048316:	56                   	push   %esi
 8048317:	68 fb 83 04 08       	push   $0x80483fb
 804831c:	e8 cf ff ff ff       	call   80482f0 <__libc_start_main@plt>
 8048321:	f4                   	hlt    
 8048322:	66 90                	xchg   %ax,%ax
 8048324:	66 90                	xchg   %ax,%ax
 8048326:	66 90                	xchg   %ax,%ax
 8048328:	66 90                	xchg   %ax,%ax
 804832a:	66 90                	xchg   %ax,%ax
 804832c:	66 90                	xchg   %ax,%ax
 804832e:	66 90                	xchg   %ax,%ax

08048330 <__x86.get_pc_thunk.bx>:
 8048330:	8b 1c 24             	mov    (%esp),%ebx
 8048333:	c3                   	ret    
 8048334:	66 90                	xchg   %ax,%ax
 8048336:	66 90                	xchg   %ax,%ax
 8048338:	66 90                	xchg   %ax,%ax
 804833a:	66 90                	xchg   %ax,%ax
 804833c:	66 90                	xchg   %ax,%ax
 804833e:	66 90                	xchg   %ax,%ax

08048340 <deregister_tm_clones>:
 8048340:	b8 d7 96 04 08       	mov    $0x80496d7,%eax
 8048345:	2d d4 96 04 08       	sub    $0x80496d4,%eax
 804834a:	83 f8 06             	cmp    $0x6,%eax
 804834d:	76 1a                	jbe    8048369 <deregister_tm_clones+0x29>
 804834f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048354:	85 c0                	test   %eax,%eax
 8048356:	74 11                	je     8048369 <deregister_tm_clones+0x29>
 8048358:	55                   	push   %ebp
 8048359:	89 e5                	mov    %esp,%ebp
 804835b:	83 ec 14             	sub    $0x14,%esp
 804835e:	68 d4 96 04 08       	push   $0x80496d4
 8048363:	ff d0                	call   *%eax
 8048365:	83 c4 10             	add    $0x10,%esp
 8048368:	c9                   	leave  
 8048369:	f3 c3                	repz ret 
 804836b:	90                   	nop
 804836c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048370 <register_tm_clones>:
 8048370:	b8 d4 96 04 08       	mov    $0x80496d4,%eax
 8048375:	2d d4 96 04 08       	sub    $0x80496d4,%eax
 804837a:	c1 f8 02             	sar    $0x2,%eax
 804837d:	89 c2                	mov    %eax,%edx
 804837f:	c1 ea 1f             	shr    $0x1f,%edx
 8048382:	01 d0                	add    %edx,%eax
 8048384:	d1 f8                	sar    %eax
 8048386:	74 1b                	je     80483a3 <register_tm_clones+0x33>
 8048388:	ba 00 00 00 00       	mov    $0x0,%edx
 804838d:	85 d2                	test   %edx,%edx
 804838f:	74 12                	je     80483a3 <register_tm_clones+0x33>
 8048391:	55                   	push   %ebp
 8048392:	89 e5                	mov    %esp,%ebp
 8048394:	83 ec 10             	sub    $0x10,%esp
 8048397:	50                   	push   %eax
 8048398:	68 d4 96 04 08       	push   $0x80496d4
 804839d:	ff d2                	call   *%edx
 804839f:	83 c4 10             	add    $0x10,%esp
 80483a2:	c9                   	leave  
 80483a3:	f3 c3                	repz ret 
 80483a5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80483a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080483b0 <__do_global_dtors_aux>:
 80483b0:	80 3d d4 96 04 08 00 	cmpb   $0x0,0x80496d4
 80483b7:	75 13                	jne    80483cc <__do_global_dtors_aux+0x1c>
 80483b9:	55                   	push   %ebp
 80483ba:	89 e5                	mov    %esp,%ebp
 80483bc:	83 ec 08             	sub    $0x8,%esp
 80483bf:	e8 7c ff ff ff       	call   8048340 <deregister_tm_clones>
 80483c4:	c6 05 d4 96 04 08 01 	movb   $0x1,0x80496d4
 80483cb:	c9                   	leave  
 80483cc:	f3 c3                	repz ret 
 80483ce:	66 90                	xchg   %ax,%ax

080483d0 <frame_dummy>:
 80483d0:	b8 c4 95 04 08       	mov    $0x80495c4,%eax
 80483d5:	8b 10                	mov    (%eax),%edx
 80483d7:	85 d2                	test   %edx,%edx
 80483d9:	75 05                	jne    80483e0 <frame_dummy+0x10>
 80483db:	eb 93                	jmp    8048370 <register_tm_clones>
 80483dd:	8d 76 00             	lea    0x0(%esi),%esi
 80483e0:	ba 00 00 00 00       	mov    $0x0,%edx
 80483e5:	85 d2                	test   %edx,%edx
 80483e7:	74 f2                	je     80483db <frame_dummy+0xb>
 80483e9:	55                   	push   %ebp
 80483ea:	89 e5                	mov    %esp,%ebp
 80483ec:	83 ec 14             	sub    $0x14,%esp
 80483ef:	50                   	push   %eax
 80483f0:	ff d2                	call   *%edx
 80483f2:	83 c4 10             	add    $0x10,%esp
 80483f5:	c9                   	leave  
 80483f6:	e9 75 ff ff ff       	jmp    8048370 <register_tm_clones>

080483fb <main>:
 80483fb:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 80483ff:	83 e4 f0             	and    $0xfffffff0,%esp
 8048402:	ff 71 fc             	pushl  -0x4(%ecx)
 8048405:	55                   	push   %ebp
 8048406:	89 e5                	mov    %esp,%ebp
 8048408:	51                   	push   %ecx
 8048409:	83 ec 04             	sub    $0x4,%esp
 804840c:	83 ec 0c             	sub    $0xc,%esp
 804840f:	68 c0 84 04 08       	push   $0x80484c0
 8048414:	e8 b7 fe ff ff       	call   80482d0 <printf@plt>
 8048419:	83 c4 10             	add    $0x10,%esp
 804841c:	b8 00 00 00 00       	mov    $0x0,%eax
 8048421:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 8048424:	c9                   	leave  
 8048425:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048428:	c3                   	ret    
 8048429:	66 90                	xchg   %ax,%ax
 804842b:	66 90                	xchg   %ax,%ax
 804842d:	66 90                	xchg   %ax,%ax
 804842f:	90                   	nop

08048430 <__libc_csu_init>:
 8048430:	55                   	push   %ebp
 8048431:	57                   	push   %edi
 8048432:	31 ff                	xor    %edi,%edi
 8048434:	56                   	push   %esi
 8048435:	53                   	push   %ebx
 8048436:	e8 f5 fe ff ff       	call   8048330 <__x86.get_pc_thunk.bx>
 804843b:	81 c3 79 12 00 00    	add    $0x1279,%ebx
 8048441:	83 ec 1c             	sub    $0x1c,%esp
 8048444:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048448:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804844e:	e8 41 fe ff ff       	call   8048294 <_init>
 8048453:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048459:	29 c6                	sub    %eax,%esi
 804845b:	c1 fe 02             	sar    $0x2,%esi
 804845e:	85 f6                	test   %esi,%esi
 8048460:	74 27                	je     8048489 <__libc_csu_init+0x59>
 8048462:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048468:	8b 44 24 38          	mov    0x38(%esp),%eax
 804846c:	89 2c 24             	mov    %ebp,(%esp)
 804846f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048473:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048477:	89 44 24 04          	mov    %eax,0x4(%esp)
 804847b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048482:	83 c7 01             	add    $0x1,%edi
 8048485:	39 f7                	cmp    %esi,%edi
 8048487:	75 df                	jne    8048468 <__libc_csu_init+0x38>
 8048489:	83 c4 1c             	add    $0x1c,%esp
 804848c:	5b                   	pop    %ebx
 804848d:	5e                   	pop    %esi
 804848e:	5f                   	pop    %edi
 804848f:	5d                   	pop    %ebp
 8048490:	c3                   	ret    
 8048491:	eb 0d                	jmp    80484a0 <__libc_csu_fini>
 8048493:	90                   	nop
 8048494:	90                   	nop
 8048495:	90                   	nop
 8048496:	90                   	nop
 8048497:	90                   	nop
 8048498:	90                   	nop
 8048499:	90                   	nop
 804849a:	90                   	nop
 804849b:	90                   	nop
 804849c:	90                   	nop
 804849d:	90                   	nop
 804849e:	90                   	nop
 804849f:	90                   	nop

080484a0 <__libc_csu_fini>:
 80484a0:	f3 c3                	repz ret 

Disassembly of section .fini:

080484a4 <_fini>:
 80484a4:	53                   	push   %ebx
 80484a5:	83 ec 08             	sub    $0x8,%esp
 80484a8:	e8 83 fe ff ff       	call   8048330 <__x86.get_pc_thunk.bx>
 80484ad:	81 c3 07 12 00 00    	add    $0x1207,%ebx
 80484b3:	83 c4 08             	add    $0x8,%esp
 80484b6:	5b                   	pop    %ebx
 80484b7:	c3                   	ret    
